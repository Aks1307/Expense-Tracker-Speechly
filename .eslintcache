[{"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\index.js":"1","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\app.js":"2","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Details\\Details.jsx":"3","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Details\\styles.js":"4","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\appStyle.js":"5","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\Main.jsx":"6","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\mainStyle.js":"7","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\form\\form.jsx":"8","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\form\\formStyle.js":"9","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\List\\List.jsx":"10","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\List\\listStyle.js":"11","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\Context\\context.js":"12","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\Context\\contextReducer.js":"13","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\constants\\categories.js":"14","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\utils\\formatDate.js":"15","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\useTransaction.js":"16"},{"size":427,"mtime":1609772534889,"results":"17","hashOfConfig":"18"},{"size":990,"mtime":1609772681563,"results":"19","hashOfConfig":"18"},{"size":761,"mtime":1609337211239,"results":"20","hashOfConfig":"18"},{"size":253,"mtime":1608912748271,"results":"21","hashOfConfig":"18"},{"size":580,"mtime":1608911487746,"results":"22","hashOfConfig":"18"},{"size":1077,"mtime":1609337299273,"results":"23","hashOfConfig":"18"},{"size":512,"mtime":1608913767535,"results":"24","hashOfConfig":"18"},{"size":4672,"mtime":1610748736234,"results":"25","hashOfConfig":"18"},{"size":245,"mtime":1608915198715,"results":"26","hashOfConfig":"18"},{"size":1527,"mtime":1608988806866,"results":"27","hashOfConfig":"18"},{"size":414,"mtime":1608927423760,"results":"28","hashOfConfig":"18"},{"size":758,"mtime":1609074984974,"results":"29","hashOfConfig":"18"},{"size":476,"mtime":1608988130113,"results":"30","hashOfConfig":"18"},{"size":1691,"mtime":1608988970531,"results":"31","hashOfConfig":"18"},{"size":350,"mtime":1609066396815,"results":"32","hashOfConfig":"18"},{"size":1233,"mtime":1609336429377,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"gj41aw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\index.js",[],["69","70"],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\app.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Details\\styles.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\appStyle.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\Main.jsx",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\mainStyle.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\form\\form.jsx",["71"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport {TextField,Typography,Grid,Button,FormControl,InputLabel,Select,MenuItem} from '@material-ui/core';\r\nimport useStyle from './formStyle'\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {ExpenseTrackerContext} from '../../../Context/context'\r\nimport {incomeCategories,expenseCategories} from '../../../constants/categories'\r\n\r\nimport {formatDate} from '../../../utils/formatDate'\r\nimport {useSpeechContext} from '@speechly/react-client'\r\n\r\n\r\nconst initialState = {\r\n    amount : '',\r\n    category : '' ,\r\n    type : '',\r\n    date : formatDate(new Date())\r\n}\r\n\r\n\r\n\r\nconst Form = () => {\r\n    const formStyle = useStyle();\r\n    const  [formData, setFormData] = useState(initialState)\r\n    const {addTransaction} = useContext(ExpenseTrackerContext);\r\n    const {segment} = useSpeechContext();\r\n\r\n\r\n    const createTransaction = () =>{\r\n            if(Number.isNaN(Number(formData.amount) || !formData.date.includes('-'))) return;\r\n            const transaction = {...formData,amount : Number(formData.amount),id : uuidv4()}\r\n            addTransaction(transaction);\r\n            setFormData(initialState);\r\n    }\r\n     //\r\n     //console.log(formData.date)\r\n\r\n     useEffect(()=>{\r\n         if(segment){\r\n             if(segment.intent.intent === 'add_expense'){\r\n                 setFormData({...formData,type:'Expense'})\r\n             }else if(segment.intent.intent==='add_income'){\r\n                 setFormData({...formData,type:'Income'})\r\n             }else if(segment.isFinal  && segment.intent.intent==='create_transaction'){\r\n                 return createTransaction();\r\n             }else if(segment.isFinal && segment.intent.intent==='cancel_transaction'){\r\n                 return setFormData(initialState)\r\n             }\r\n\r\n             segment.entities.forEach((e)=>{\r\n                 const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\r\n                 console.log(category)\r\n                 switch(e.type){\r\n                    case 'amount' :\r\n                        setFormData({...formData,amount:e.value}) \r\n                        break;\r\n                    case 'category':\r\n                        setFormData({...formData,category})\r\n                        break;\r\n                    case 'date' :\r\n                        setFormData({...formData,date : e.value});\r\n                        break;        \r\n                    default:\r\n                        break;  \r\n                 }\r\n             })\r\n             if(segment.isFinal && formData.amount && formData.category && formData.date && formData.type){\r\n                 createTransaction();\r\n             }\r\n         }\r\n     },[segment])\r\n    const selectedCategories = formData.type=== 'Income' ? incomeCategories : expenseCategories;\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\r\n                    {segment && (segment.words.map((w)=>w.value).join(\" \"))}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                   <FormControl fullWidth>\r\n                       <InputLabel>Type</InputLabel>\r\n                       <Select value={formData.type} onChange={(e)=>setFormData({...formData,type:e.target.value})}>\r\n                           <MenuItem value=\"Income\">Income</MenuItem>\r\n                           <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                       </Select>\r\n                    </FormControl> \r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                   <FormControl fullWidth>\r\n                       <InputLabel>Category</InputLabel>\r\n                       <Select value={formData.category} onChange={(e)=>setFormData({...formData,category:e.target.value})}>\r\n                       {selectedCategories.map((c)=> <MenuItem key={c.type} value={c.type} >{c.type}</MenuItem>)}\r\n                       </Select>\r\n                    </FormControl> \r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e)=>setFormData({...formData,amount:e.target.value})}/>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e)=>setFormData({...formData,date:formatDate(e.target.value)})}/>\r\n            </Grid>\r\n            <Button className={formStyle.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\form\\formStyle.js",[],["72","73"],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\components\\Main\\List\\listStyle.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\Context\\context.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\Context\\contextReducer.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\constants\\categories.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\utils\\formatDate.js",[],"C:\\Users\\singh\\Desktop\\expense_tracker\\src\\useTransaction.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":70,"column":8,"nodeType":"80","endLine":70,"endColumn":17,"suggestions":"81"},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["86"],["84"],["85"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"89","text":"90"},[2703,2712],"[createTransaction, formData, segment]"]